[gd_resource type="VisualShader" load_steps=4 format=3 uid="uid://blqrk5sbh5hti"]

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_lu47t"]
size = Vector2(420, 200)
expression = "o = true ;
if (i > 0.5) {
	discard;
	}"

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_71xw8"]
parameter_name = "sight"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_hqxqc"]
expanded_output_ports = [0]
source = 5

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform sampler2D sight;



void fragment() {
	vec4 n_out4p0;
// Texture2D:4
	n_out4p0 = texture(sight, UV);
	float n_out4p1 = n_out4p0.r;


	bool n_out2p0;
// Expression:2
	n_out2p0 = false;
	{
		n_out2p0 = true ;
		if (n_out4p1 > 0.5) {
			discard;
			}
	}


// Output:0
	COLOR.rgb = vec3(n_out2p0 ? 1.0 : 0.0);


}
"
graph_offset = Vector2(-432.005, -15.4569)
mode = 1
flags/light_only = false
nodes/fragment/2/node = SubResource("VisualShaderNodeExpression_lu47t")
nodes/fragment/2/position = Vector2(-280, 80)
nodes/fragment/2/size = Vector2(420, 200)
nodes/fragment/2/input_ports = "0,0,i;"
nodes/fragment/2/output_ports = "0,6,o;"
nodes/fragment/2/expression = "o = true ;
if (i > 0.5) {
	discard;
	}"
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture2DParameter_71xw8")
nodes/fragment/3/position = Vector2(-1170.25, 111.27)
nodes/fragment/4/node = SubResource("VisualShaderNodeTexture_hqxqc")
nodes/fragment/4/position = Vector2(-760, 120)
nodes/fragment/connections = PackedInt32Array(2, 0, 0, 0, 3, 0, 4, 2, 4, 1, 2, 0)
